/* Generated By:JavaCC: Do not edit this line. EpsilonConstants.java */

/**
 * Token literal values and constants.
 * Generated by org.javacc.parser.OtherFilesGen#start()
 */
public interface EpsilonConstants {

  /** End of File. */
  int EOF = 0;
  /** RegularExpression Id. */
  int SALTO = 3;
  /** RegularExpression Id. */
  int INICIO = 4;
  /** RegularExpression Id. */
  int ROMPER = 5;
  /** RegularExpression Id. */
  int LEER = 6;
  /** RegularExpression Id. */
  int IMPRIMIR = 7;
  /** RegularExpression Id. */
  int WHILE = 8;
  /** RegularExpression Id. */
  int FOR = 9;
  /** RegularExpression Id. */
  int V_ALF_NUM = 10;
  /** RegularExpression Id. */
  int IDENTIFICADOR = 11;
  /** RegularExpression Id. */
  int NUMERO = 12;
  /** RegularExpression Id. */
  int V_NUM = 13;
  /** RegularExpression Id. */
  int STRING = 14;
  /** RegularExpression Id. */
  int BOOLEAN = 15;
  /** RegularExpression Id. */
  int VF = 16;
  /** RegularExpression Id. */
  int IF = 17;
  /** RegularExpression Id. */
  int FIN = 18;
  /** RegularExpression Id. */
  int SWITCH = 19;
  /** RegularExpression Id. */
  int CASE = 20;
  /** RegularExpression Id. */
  int PI = 21;
  /** RegularExpression Id. */
  int PD = 22;
  /** RegularExpression Id. */
  int LI = 23;
  /** RegularExpression Id. */
  int LD = 24;
  /** RegularExpression Id. */
  int PC = 25;
  /** RegularExpression Id. */
  int ASOCIATIVO = 26;
  /** RegularExpression Id. */
  int IGUAL = 27;
  /** RegularExpression Id. */
  int ASIGNACION = 28;
  /** RegularExpression Id. */
  int COMA = 29;
  /** RegularExpression Id. */
  int OR = 30;
  /** RegularExpression Id. */
  int AND = 31;
  /** RegularExpression Id. */
  int NOT = 32;
  /** RegularExpression Id. */
  int DIFERENTE = 33;
  /** RegularExpression Id. */
  int MAYORQ = 34;
  /** RegularExpression Id. */
  int MENORQ = 35;
  /** RegularExpression Id. */
  int RESIDUO = 36;
  /** RegularExpression Id. */
  int MODULO = 37;
  /** RegularExpression Id. */
  int MENOS = 38;
  /** RegularExpression Id. */
  int MAS = 39;
  /** RegularExpression Id. */
  int MULT = 40;
  /** RegularExpression Id. */
  int DIV = 41;
  /** RegularExpression Id. */
  int UNION = 42;
  /** RegularExpression Id. */
  int TER = 43;

  /** Lexical state. */
  int DEFAULT = 0;

  /** Literal token values. */
  String[] tokenImage = {
    "<EOF>",
    "\"\\t\"",
    "\" \"",
    "\"\\r\\n\"",
    "\"Inicio\"",
    "\"romper\"",
    "\"leer\"",
    "\"imprimir\"",
    "\"mientras\"",
    "\"para\"",
    "<V_ALF_NUM>",
    "<IDENTIFICADOR>",
    "\"Num\"",
    "<V_NUM>",
    "\"Cad\"",
    "\"Bool\"",
    "<VF>",
    "\"si\"",
    "\"Fin\"",
    "\"segun\"",
    "\"caso\"",
    "\"(\"",
    "\")\"",
    "\"{\"",
    "\"}\"",
    "\";\"",
    "\":\"",
    "\"==\"",
    "\"=\"",
    "\",\"",
    "\"|\"",
    "\"&\"",
    "\"!\"",
    "\"!=\"",
    "\">\"",
    "\"<\"",
    "\"%\"",
    "\"Mod\"",
    "\"-\"",
    "\"+\"",
    "\"*\"",
    "\"/\"",
    "\"~\"",
    "<TER>",
  };

}
